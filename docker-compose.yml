version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_DATABASE: GestionUser
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql.cng:/etc/mysql/conf.d/mysql.cnf
    healthcheck:
      test: [ "CMD", "mysql", "-h", "mysql", "-u", "root", "-e", "SELECT 1 FROM dual;" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  backend:
    build:
      context: ./GestionUser
      dockerfile: Dockerfile
    container_name: springboot
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/GestionUser?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&connectTimeout=10000&socketTimeout=30000&autoReconnect=true&maxReconnects=10
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
      SPRING_JIMDASHBOARD_DATASOURCE_URL: jdbc:mysql://mysql:3306/jimdashboard?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&connectTimeout=10000&socketTimeout=30000&autoReconnect=true&maxReconnects=10
      SPRING_JIMDASHBOARD_DATASOURCE_USERNAME: root
      SPRING_JIMDASHBOARD_DATASOURCE_PASSWORD: ""
      MAILING_FRONTEND_ACTIVATION_URL: http://frontend:80/activate-account
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 5
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000
      SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: 600000
      SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: 1800000
      SPRING_DATASOURCE_HIKARI_INITIALIZATION_FAIL_TIMEOUT: -1
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./GestionUserDIM2
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8085:8081"
    volumes:
      - nexus-data:/nexus-data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql-data:
  nexus-data:


networks:
  app-network:
    driver: bridge
